id: "public.tts-api"
type: "APIS"
summary: "文本转语音（TTS）服务，支持本地参考音色或服务器音色。"
description: |
  通过公开TTS API，可以将任意文本生成语音音频。支持参考音频的音色模仿或选择已有服务器音色。
  支持 WAV/MP3 等音频格式，并可控制生成长度、随机性和重复惩罚等参数。

  主要功能：
  - 文本转语音生成
  - 支持本地参考音色文件
  - 可选择服务器已有音色
  - 支持控制生成参数：长度、温度、重复惩罚、top_p
  - 支持流式或非流式生成

examples:
  - title: "Python 示例 - 基本TTS"
    content: |
      import os
      import msgpack
      import requests

      url = os.environ["TTS_URL"] 
      headers = {"Content-Type": "application/msgpack"}

      data = {
          "text": "你好，这是一段测试语音。",
          "chunk_length": 200,
          "format": "wav",
          "references": [],
          "reference_id": None,
          "seed": None,
          "use_memory_cache": "off",
          "normalize": True,
          "streaming": False,
          "max_new_tokens": 1024,
          "top_p": 0.8,
          "repetition_penalty": 1.1,
          "temperature": 0.8
      }

      packed = msgpack.packb(data)
      response = requests.post(url, headers=headers, data=packed)

      if response.status_code == 200:
          with open("output.wav", "wb") as f:
              f.write(response.content)
          print("音频生成成功！")
      else:
          print("错误:", response.content.decode('utf-8'))

base_url: "${TTS_URL}"
endpoints:
  - summary: "根据文本生成语音音频"
    method: "POST"
    path: "/v1/tts"
    inputs:
      type: "object"
      properties:
        text:
          type: "string"
          description: "要生成语音的文本内容"
        chunk_length:
          type: "integer"
          description: "生成音频分块长度，单位为 token"
          default: 200
        format:
          type: "string"
          description: "输出音频格式，如 wav 或 mp3"
          default: "wav"
        references:
          type: "array"
          items:
            type: "object"
            properties:
              audio:
                type: "string"
                description: "本地上传的wav音频数据，需要包括路径"
              text:
                type: "string"
                description: "本地上传的wav音频文本内容"
        reference_id:
          type: ["string", "null"]
          description: "使用服务器已有音色ID，例如 'CN_MAN' 或 'ktxy'"
        seed:
          type: ["integer", "null"]
          description: "随机种子，用于可复现生成"
        use_memory_cache:
          type: "string"
          description: "是否使用内存缓存"
          default: "off"
        normalize:
          type: "boolean"
          description: "是否对音频进行归一化"
          default: true
        streaming:
          type: "boolean"
          description: "是否使用流式生成"
          default: false
        max_new_tokens:
          type: "integer"
          description: "生成最大 token 数量"
          default: 1024
        top_p:
          type: "number"
          description: "控制生成随机性"
          default: 0.8
        repetition_penalty:
          type: "number"
          description: "重复惩罚系数"
          default: 1.1
        temperature:
          type: "number"
          description: "生成温度，控制多样性"
          default: 0.8
      required: ["text"]
    outputs:
      success_schema:
        type: "object"
        properties:
          audio:
            type: "string"
            description: "生成音频的字节数据（可直接保存为 wav/mp3）"
